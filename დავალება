////     Homework1
////{
////    internal class Programe
////    {
////        static void Main(string[] args)
////        {

////            string correctUsername = "Guga";
////            string correctpasswort = "1234";

////            Console.WriteLine("Enter username:");
////            string username = Console.ReadLine();

////            Console.WriteLine("Enter password:");
////            string password = Console.ReadLine();

////            string correctUsername1 = correctUsername;
////            string correctpasswort1 = correctpasswort;

////            if (username == correctUsername1 && password == correctpasswort1)
////            {
////                Console.WriteLine("Login successful!");
////            }
////            else
////            {
////            Console.WriteLine("Login failed. Invalid credentials!");
////            return;
////            }     
////        }
////    }





//// Homework 2
//// See https://aka.ms/new-console-template for more information
//Console.WriteLine("Type Your Mark (0-100)");
//int mark = Convert.ToInt16(Console.ReadLine());

//if (mark >= 90 && mark <= 100)
//{ Console.WriteLine("Your Grade is A+"); }
//else if (mark >= 80 && mark <= 89)
//{ Console.WriteLine("Your Grade is A"); }
//else if (mark >= 70 && mark <= 79)
//{ Console.WriteLine("Your Grade is B"); }
//else if (mark >= 31 && mark <= 69)
//{ Console.WriteLine("Your Grade is C"); }
//else if (mark <= 30)
//{ Console.WriteLine("Your Grade is D, try better next time"); }

//if (mark < 0 || mark > 100)
//{ Console.WriteLine("Invalid Mark"); }
//return;




//// Homework 3

//Console.WriteLine("Select Amount of Money:");
//double amount = Convert.ToDouble(Console.ReadLine());

//double discountPersent;
//double discountPersent1;

//discountPersent = 10;
//discountPersent1 = 5;


//double finalAmount = amount - (amount * discountPersent / 100);
//double finalAmount1 = amount - (amount * discountPersent1 / 100);

//if (amount > 1000)
//{
//    discountPersent = 10;

//    Console.WriteLine($"Your Final Amount after {discountPersent}% discount is: {finalAmount}");

//}
//else if (amount < 1000)
//{
//    discountPersent1 = 5;
//    Console.WriteLine($"Your Final Amount after {discountPersent1}% discount is: {finalAmount1}");
//}





////// Homework 4

//// See https://aka.ms/new-console-template for more information
//Console.WriteLine("Select Numbers from 1-7");

//byte number = Convert.ToByte(Console.ReadLine());

//if (number == 1)
//{
//    Console.WriteLine("Monday");
//}
//else if (number == 2)
//{
//    Console.WriteLine("Tuesday");
//    Console.WriteLine("Tuesday");
//}
//else if (number == 3)
//{
//    Console.WriteLine("Wednesday");
//}
//else if (number == 4)
//{
//    Console.WriteLine("Thursday");
//}
//else if (number == 5)
//{
//    Console.WriteLine("Friday");
//}
//else if (number == 6)
//{
//    Console.WriteLine("Saturday");
//}
//else if (number == 7)
//{
//    Console.WriteLine("Sunday");

//}
//else
//{
//    Console.WriteLine("Invalid number. Please select number from 1 to 7 range.");
//}




////Homework 5

//// See https://aka.ms/new-console-template for more information

//Console.WriteLine("Type One Colour From: Green Yellow Red");
//String colour = Console.ReadLine();

//if (colour == "Green")
//{
//    Console.WriteLine("Go!!!");
//}
//else if (colour == "Yellow")
//{
//    Console.WriteLine("Get Ready!!!");
//}
//else if (colour == "Red")
//{
//    Console.WriteLine("Stop!!!");
//}

//else
//{
//    Console.WriteLine("You have selected an invalid colour");
//}




//// Homework 6

// See https://aka.ms/new-console-template for more information
//using System;
//class Programe
//{
//    static void Main()
//    {

//        Console.WriteLine("Enter Your Balance: ");
//        double Balance = double.Parse(Console.ReadLine()!);

//        Console.WriteLine("Enter Withdrawal Amount");

//        double Withdrawal = double.Parse(Console.ReadLine()!);

//        if (Withdrawal <= 0)
//        {
//            Console.WriteLine("Invalid Amount For Withdrawal");
//        }

//        else if (Withdrawal > Balance)
//        {
//            Console.WriteLine("Insuficiant Amount of Money on Balance");
//        }

//        else
//        {
//            double RemainBalance = Balance - Withdrawal;
//            Console.WriteLine($"Withdrawal Successfully Complited!Your Remained Balance is: {RemainBalance}");
//        }
//    }
//}




//// Homework 7

//// See https://aka.ms/new-console-template for more information
//Console.WriteLine("Please Put the Mark");

//Double Mark = Convert.ToDouble(Console.ReadLine());

//double mark = Mark;


//if (Mark >= 50 && Mark <= 100)
//{
//    Console.WriteLine("Congretualtions You Passed!");
//}

//else if (Mark < 50)
//{
//    Console.WriteLine($"Your Mark {Mark} is not enaught to pass the stage");
//}
//else if (Mark > 100)
//{
//    Console.WriteLine("Please Put Number from (0-100) Range");
//}
//else
//{
//    Console.WriteLine("Invalid Number");
//}




//// Homework 8

//// See https://aka.ms/new-console-template for more information
//using System;
//class Programe
//{
//    static void Main()
//    {
//        Console.WriteLine("Enter firt number a:");
//        double a = double.Parse(Console.ReadLine()!);
//        Console.WriteLine("Enter second number b:");
//        double b = double.Parse(Console.ReadLine()!);
//        Console.WriteLine("Execute Operation (+,-,*,/)");
//        string op = Console.ReadLine()!;

//        double result;

//        if (op == "+")
//        {
//            result = a + b;
//            Console.WriteLine($"Result: {a}+{b} = {result}");

//        }
//        else if (op == "-")
//        {
//            result = a - b;
//            Console.WriteLine($"Result: {a}-{b} = {result}");
//        }
//        else if (op == "*")
//        {
//            result = a * b;
//            Console.WriteLine($"Result: {a}*{b} = {result}");
//        }
//        else if (op == "/")
//        {
//            result = a / b;
//            Console.WriteLine($"Result: {a}/{b} = {result}");
//        }

//        else
//        {
//            Console.WriteLine("Invalid Operation");
//        }
//    }
//}



//// Homework 9

//// See https://aka.ms/new-console-template for more information
//Console.WriteLine("Enter Your Age");

//int age = Convert.ToInt32(Console.ReadLine());

//if (age < 0)
//{
//    Console.WriteLine("Invalid Age");
//}

//else if (age >= 18)
//{
//    Console.WriteLine("Eligible to Vote");
//}

//else
//{
//    Console.WriteLine("Not Eligble Age");
//}




//// Homework 10

//// See https://aka.ms/new-console-template for more information
//Console.WriteLine("Enter Your Position");
//string position = Console.ReadLine()!;
//Console.WriteLine("Enter Your Sallary");
//double sallary = double.Parse(Console.ReadLine()!);
//double bonusPercent;


//if (position == "Manager" && sallary > 2500)

//{
//    bonusPercent = 15;
//}

//else if (position == "Manager" && sallary <= 2500)
//{
//    bonusPercent = 10;
//}

//else if (position == "Developer" && sallary > 2000)
//{
//    bonusPercent = 12;
//}

//else if (position == "Developer" && sallary < 2000)
//{
//    bonusPercent = 8;
//}

//else
//{
//    bonusPercent = 5;
//}

//double bonusAmount = sallary * bonusPercent / 100;
//double totalSalary = sallary + bonusAmount;

//Console.WriteLine($"Possition: {position}");
//Console.WriteLine($"Pure Sallary: {sallary}");
//Console.WriteLine($"Bonus: {bonusPercent}%");
//Console.WriteLine($"Total Salary: {totalSalary}");






--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//Assignment 1

//namespace Assignment 
//{
//    internal class Program
//    {
//        static void Main(string[] args)
//        {
//           for (int i = 1; i <= 10; i++)
//            {
//               Console.WriteLine(i);
//            }
//            }
//        }
//    }




//Assignment 2

//namespace Assignment
//{
//    internal class Program
//    {
//        static void Main(string[] args)

//{
//    int sum = 0;
//    for (int i = 1; i <= 100; i++)
//    {
//        sum = sum + i;
//    }
//    Console.WriteLine($"Sum = {sum}");
//}





//Assignment 3

//namespace Assignment
//{
//      internal class Program
//      {
//          static void Main(string[] args)
//          {


//for (int i = 1; i <= 19; i = i +2)
//{
//    Console.WriteLine(i);
//}





//Assignment 4

//namespace Assignment
//{
//    internal class Program
//    {
//        static void Main(string[] args)
//        {
//            Console.WriteLine("Enter 5");
//            int n = int.Parse(Console.ReadLine());

//            n = 5;

//            for (int i = 1; i <= 9; i++)

//            {
//                int result = n * i;

//                Console.WriteLine($"{n} * {i} = {result}");
//            }
//        }
//    }
//}







//Assignment 5


//for (int i = 10; i >= 1; i--)
//{

//    Console.WriteLine(i);
//}





//Assignment 6


//Console.WriteLine("Enter a number to find its factorial:");

//int n = int.Parse(Console.ReadLine());

//int factorial = 1;

//for (int i = 1;  i<=n; i++)
//{
//   factorial = factorial * i;
//}
//Console.WriteLine($"factorial = {factorial}");





//Assignment 7

//char symbol = '*';

//int n= 10;

//string result = "";

//for (int i = 1; i <= n; i++)
//{
//    result = result + symbol;
//}
//Console.WriteLine(result);





//Assignment 8

//int sum = 0;
//int number = 1;

//while(sum<50)
//{
//    sum = sum + number;
//    number++;
//}
//Console.WriteLine($"Sum = {sum}");




--------------------------------------------------------------------------------------------------------------------------------------------------------------------------

//internal class Program
//{
//    private static void Main(string[] args)
//    {
//        Console.WriteLine("Enter Corresponding Number");

//        int rows = 4;

//        for (int i = 0; i < rows; i++)
//        {
//            Console.Write(" ");
//            {
//                for (int j = 1; j <= (2 + i - 1); j++)
//                {
//                    Console.Write("*");
//                }
//                Console.WriteLine();
//            }
//        }
//    }
//}





//internal class Program
//{
//    private static void Main(string[] args)
//    {
//        Console.WriteLine("Enter Start number ");
//        int start = int.Parse(Console.ReadLine()!);
//        Console.WriteLine("Enter End Number");
//        int end = int.Parse(Console.ReadLine()!);

//        if (start > end)
//        {
//            Console.WriteLine("Start number must be less than End number!");
//            return;
//        }
//        else
//        {
//            for (int i = start; i <= end; i++)
//            {
//                if (i % 2 == 0)
//                {
//                    Console.WriteLine($"{i}");
//                }

//            }
//        }
//    }
//}





//internal class Program
//{
//    private static void Main(string[] args)
//    {
//        try
//        {
//            Console.WriteLine("Enter First Number ");
//            double num1 = double.Parse(Console.ReadLine()!);

//            Console.WriteLine("Enter Coresponding Operator (+, -, *, /) ");
//            string op = Console.ReadLine()!;
//            Console.WriteLine("Enter Second Number ");
//            double num2 = double.Parse(Console.ReadLine()!);

//            double result;
//            switch (op)
//            {
//                case "+":
//                    result = num1 + num2;
//                    Console.WriteLine($"Result: {result}");
//                    break;
//                case "-":
//                    result = num1 - num2;
//                    Console.WriteLine($"Result: {result}");
//                    break;
//                case "*":
//                    result = num1 * num2;
//                    Console.WriteLine($"Result: {result}");
//                    break;
//                case "/":
//                    if (num2 == 0)
//                    {
//                        throw new ArgumentException("Division By Zero is not Allowed");
//                    }
//                    result = num1 / num2;
//                    Console.WriteLine($"Result: {result}");
//                    break;
//                default:
//                    Console.WriteLine("Error: Invalid operator. Please use +, -, *, or /.");
//                    break;
//            }
//        }
//        catch (Exception ex)
//        {
//            Console.WriteLine(ex.Message);
//        }
//    }
//}

==================================================================================================================================================================


//int[] numbers = [1, 2, 3, 4, 5];

//for (int i = 0; i < numbers.Length; i++)
//{
//    Console.WriteLine(numbers[i]);
//}




//int[] numbers = [1, 2, 3, 4, 5];

//int max = 0;

//for (int i = 0; i < numbers.Length; i++)
//{
//    if (numbers[i] > max)
//        max = numbers[i];
//}
//Console.WriteLine(max);




//int[] numbers = [1, 2, 3, 4, 5];

//int min = numbers.Min();

//for (int i = 0; i < numbers.Length; i++)
//{
//    if (numbers[i] < min)
//        min = numbers[i];
//}
//Console.WriteLine(min);





//int[] numbers = [1, 2, 3, 4, 5];

//int sum = 0;

//for (int i = 0; i < numbers.Length; i++)
//{
//    sum =sum+ numbers[i];
//}
//Console.WriteLine(sum);





//int[] numbers = [1, 2, 3, 4, 5];

////Console.WriteLine("Original Array");

////for (int i = 0; i < numbers.Length; i++)

////    Console.Write(numbers[i]);
////Console.WriteLine();

//Console.WriteLine("Reversed Array");

//for (int i = 4; i>=0; i--)

//    Console.Write(numbers[i]);



//internal class Program
//{
//    private static void Main(string[] args)
//    {
//        int[] numbers = [1, 2, 3, 4, 5];

//        Console.WriteLine("Odd numbers are");

//        for (int i = 0; i < numbers.Length; i++)
//        {
//            if (numbers[i] % 2 != 0)

//                Console.WriteLine($"{numbers[i]} ");
//        }

//        Console.WriteLine("Odd numbers are");
//        for (int i = 0; i < numbers.Length; i++)
//        {

//            if (numbers[i] % 2 == 0)
//                Console.WriteLine($"{numbers[i]} ");
//        }
//    }
//}


//internal class Program
//{
//    private static void Main(string[] args)
//    {
//        int[] numbers = [1, 2, 3, 4, 5];

//        int evenCount = 0;
//        int oddCount = 0;

//        for (int i = 0; i < numbers.Length; i++)
//        {
//            if (numbers[i] % 2 == 0)
//            {
//                evenCount++;
//            }

//            else
//            {
//                oddCount++;
//            }

//        }
//        Console.WriteLine($"Evens are: {evenCount}");
//        Console.WriteLine($"Odds are: {oddCount}");
//    }
//}








//internal class Program
//{
//    private static void Main(string[] args)
//    {
//        int[] numbers = [1, 2, 3, 4, 5];

//        Console.WriteLine("Enter the Number");

//       int number= int.Parse(Console.ReadLine());
//       bool found = false;
//        for (int i = 0; i < numbers.Length; i++)
//        {
//            if (number == numbers[i])
//            {
//                Console.WriteLine($"Number {number} exists at index {i}");
//                found = true;
//                break;
//            }
//        }
//            if (!found)
//            {
//                Console.WriteLine($" Number {number} does't exist");

//            }

//        }


//    }





//using System.Linq;

//internal class Program
//{
//    private static void Main(string[] args)
//    {
//        int[] numbers = [1, 2, 3, 4, 5];
//        int[] copiednumbers = new int[numbers.Length];

//        for (int i = 0; i < numbers.Length; i++)

//                copiednumbers[i] = numbers[i];
//        Console.WriteLine($" Original [{string.Join(",", numbers)}]");
//        Console.WriteLine($" Dublicated [{string.Join(",",copiednumbers)}]");

//    }


//}






//using System.Linq;

//internal class Program
//{
//    private static void Main(string[] args)
//    {
//        int[] numbers = [1, 2, 3, 4, 5];//   
//        int secondmax = 0;

//        for (int i = 0; i < numbers.Length; i++)

//            secondmax = numbers.Length - 1;

//        Console.WriteLine($"Second large number within Array is {secondmax}.");

//    }


//}



//using System.Linq;

//internal class Program
//{
//    private static void Main(string[] args)
//    {

//        int[] numbers = [1, 2, 3, 4, 5, 5, 5, 2, 1, 1, 2];



//        for (int i = 0; i < numbers.Length; i++)
//        {

//            int count = 0;
//            int currentNumber = numbers[i];

//            for (int j = 1; j < numbers.Length; j++)
//            {
//                if (numbers[j] == currentNumber)

//                {

//                    count++;
//                }

//                Console.WriteLine($" Number {currentNumber} appear {count} times");
//            }
//        }
//    }
//}





//{ 
//       int[] numbers = { 1, 2, 3, 4, 5 };
//       int positions = 2; 

//        Console.WriteLine($"Original: [{string.Join(", ", numbers)}]");

//        int[] rotatedRight = RotateRight(numbers, positions);
//        Console.WriteLine($"Rotated Right by {positions}: [{string.Join(", ", rotatedRight)}]");
//}

//    static int[] RotateRight(int[] arr, int positions)
//    {
//        int length = arr.Length;
//        positions = positions % length; 
//        int[] result = new int[length];

//        for (int i = 0; i < length; i++)
//        {
//            int newPosition = (i + positions) % length;
//            result[newPosition] = arr[i];
//        }

//        return result;
//    }





private static void Main(string[] args)
{
    int[] numbers = { 64, 35, 25, 12, 21, 99, 90 };

    Console.WriteLine($"Original Array: [{string.Join(", ", numbers)}]");

    BubbleSort(numbers);

    Console.WriteLine($"Sorted Array: [{string.Join(", ", numbers)}]");
}

static void BubbleSort(int[] arr)
{
    int n = arr.Length;

    for (int i = 0; i < n - 1; i++)
    {
        for (int j = 0; j < n - i - 1; j++)
        {
            if (arr[j] > arr[j + 1])
            {
                
                int temp = arr[j];
                arr[j] = arr[j + 1];
                arr[j + 1] = temp;
            }
        }
    }
}



--------------------------------------------------------------------------------------------------------------------------------------------------------------------

namespace Functions
{
    internal class Program
    {
        static void Main(string[] args)
        {
            int[] numbers = { 1, 2, 3, 4, 5 };
            int userNumber = GetUserInput();
            bool found = SearchNumber(numbers, userNumber);
            DisplayResult(userNumber, found);

        }
        static int GetUserInput()
        {
            Console.Write("Enter a number to search: ");
            int number = int.Parse(Console.ReadLine());
            return number;
        }

        static bool SearchNumber(int[] numbers, int userNumber)
        {
            for (int i = 0; i < numbers.Length; i++)
            {
                if (numbers[i] == userNumber)
                {
                    Console.WriteLine($"Number {userNumber} exists at index {i}.");
                    return true;
                }
            }
            return false;
        }
        static void DisplayResult(int userNumber, bool found)
        {
            if (!found)
            {
                Console.WriteLine($"Number {userNumber} does not exist in the array.");
            }
        }
    }
}



------------------------------------------------------------------------------------------------------------------------------------------------------------------------


//using System.Reflection;
//using static System.Net.Mime.MediaTypeNames;

//internal class Program
//{
//    static void Main()
//    {
//        Console.WriteLine("Enter Any Sentence:");
//        String sentence = Console.ReadLine();

//        String result = CapitalizeAfterPeriod(sentence);
//        Console.WriteLine(result);
//    }
//    static string CapitalizeAfterPeriod(string text)
//    {
//        if (text.Length == 0)

//            return text;
//        string[] sentences = text.Split('.');
//        string result = "";

//        for (int i = 0; i < sentences.Length; i++)
//        {
//            string trimmed = sentences[i].Trim();

//            if (trimmed.Length > 0)
//            {
//                string capitalized = char.ToUpper(sentences[i][0]) + sentences[i].Substring(1);
//                result = result + capitalized;
//            }

//        }
//        return result;
//    }
//}



//internal class Program
//{
//    static void Main()
//    {
//        Console.WriteLine("Enter Any Sentence:");
//        string sentence = Console.ReadLine();

//        int vowelCount = CountVowels(sentence);
//        Console.WriteLine($"Number of vowels: {vowelCount}");

//        static int CountVowels(string text)
//        {

//            int count = 0;
//            string lowerText = text.ToLower();

//            for (int i = 0; i < lowerText.Length; i++)
//            {
//                char existingChar = lowerText[i];

//                if (existingChar == 'a' || existingChar == 'e' || existingChar == 'i' || existingChar == 'o' || existingChar == 'u')
//                {
//                    count++;
//                }
//            }
//            return count;
//        }
//    }
//}




//internal class Program
//{
//    static void Main()
//    {
//        Console.WriteLine("Eneter Sentense");
//        string sentance = Console.ReadLine();

//        string reversedSentance = ReverseSentance(sentance);
//        Console.WriteLine($"Reversed Sentance: {reversedSentance}");

//        static string ReverseSentance(string text)
//        {
//            string[] words = text.Split(' ');
//            Array.Reverse(words);
//            return string.Join(" ", words);
//        }

//    }
//}



//internal class Program
//{
//    static void Main()
//    {
//        Console.WriteLine("Enter Any Word:");
//        string word = Console.ReadLine();

//        string reversedWord = ReverseWord(word);
//        Console.WriteLine($"Reversed Word: {reversedWord}");

//        static string ReverseWord(string text)
//        {
//            char[] charArray = text.ToCharArray();
//            Array.Reverse(charArray);
//            return new string(charArray);
//        }
//    }
//}


